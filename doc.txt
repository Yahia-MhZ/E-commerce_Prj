-- Create the database
CREATE DATABASE IF NOT EXISTS ecommerce;

-- Use the database
USE ecommerce;

-- Create the table for products
CREATE TABLE IF NOT EXISTS products (
    product_id INT AUTO_INCREMENT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Create the table for customers
CREATE TABLE IF NOT EXISTS customers (
    customer_id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Create the table for orders
CREATE TABLE IF NOT EXISTS orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    customer_id INT,
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    total_amount DECIMAL(10, 2) NOT NULL,
    status ENUM('pending', 'completed', 'cancelled') DEFAULT 'pending',
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Create the table for order items
CREATE TABLE IF NOT EXISTS order_items (
    order_item_id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT NOT NULL,
    subtotal DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

-- Create the table for product reviews
CREATE TABLE IF NOT EXISTS product_reviews (
    review_id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    rating INT NOT NULL,
    comment TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (product_id) REFERENCES products(product_id),
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

-- Create the table for shopping carts
CREATE TABLE IF NOT EXISTS shopping_carts (
    cart_id INT AUTO_INCREMENT PRIMARY KEY,
    customer_id INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

-- Create the table for cart items
CREATE TABLE IF NOT EXISTS cart_items (
    cart_item_id INT AUTO_INCREMENT PRIMARY KEY,
    cart_id INT,
    product_id INT,
    quantity INT NOT NULL,
    FOREIGN KEY (cart_id) REFERENCES shopping_carts(cart_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);



import data

-- Insert demo products
INSERT INTO products (product_name, description, price, stock_quantity) VALUES
('laptop', 'Powerful  with high-performance specs.', 999.99, 50),
('Smartphone', 'Latest smartphone with advanced features.', 499.99, 100),
('Headphones', 'High-quality noise-canceling headphones.', 149.99, 200),
('Camera', 'Professional DSLR camera with excellent image quality.', 1299.99, 30),
('Tablet', 'Sleek and lightweight tablet for on-the-go use.', 299.99, 80);

-- Insert demo customers
INSERT INTO customers (first_name, last_name, email, password) VALUES
('John', 'Doe', 'john.doe@email.com', 'password123'),
('Jane', 'Smith', 'jane.smith@email.com', 'securepass'),
('Mike', 'Johnson', 'mike.johnson@email.com', 'myp@ssword');

-- Insert demo orders
INSERT INTO orders (customer_id, total_amount, status) VALUES
(1, 1499.97, 'completed'),
(2, 849.98, 'pending'),
(3, 449.99, 'completed');

-- Insert demo order items
INSERT INTO order_items (order_id, product_id, quantity, subtotal) VALUES
(1, 1, 2, 1999.98),
(2, 3, 1, 149.99),
(3, 2, 3, 1499.97),
(3, 4, 1, 1299.99);

-- Insert demo product reviews
INSERT INTO product_reviews (product_id, customer_id, rating, comment) VALUES
(1, 1, 5, 'Great laptop! Fast and reliable.'),
(2, 2, 4, 'Good smartphone, but battery life could be better.'),
(3, 3, 5, 'Amazing headphones! Noise cancellation works perfectly.');

-- Insert demo shopping carts
INSERT INTO shopping_carts (customer_id) VALUES
(1),
(2);

-- Insert demo cart items
INSERT INTO cart_items (cart_id, product_id, quantity) VALUES
(1, 1, 1),
(1, 3, 2),
(2, 2, 3),
(2, 4, 1);


